import React from 'react';

const PriceDataPanel = ({
  listStatus,
  priceDataList,
  setPriceDataList,
  userConfig,
  updateUserConfig,
  handleGenUpgradePath,
  setPriceManual,
  getTimeDesc,
  serverList,
  professionsTypeArr,
  isMy,
  loadPriceDataList
}) => {
  return (
    <div className="panel-static select-none panel-price-list" style={{ width: 800 }}>
      <div className="panel-title">选择价格数据</div>
      {listStatus === 'loading' ? (
        <>
          <svg className="list-loading" fill="#0c8cfa" viewBox="0 0 1024 1024" width="70" height="70"><path d="M512.000427 1024c-69.12 0-136.192-13.482667-199.296-40.192a510.293333 510.293333 0 0 1-162.688-109.824A510.293333 510.293333 0 0 1 0.000427 512a35.968 35.968 0 1 1 72.021333 0 439.338667 439.338667 0 0 0 128.896 311.210667A437.717333 437.717333 0 0 0 512.000427 951.978667a439.338667 439.338667 0 0 0 311.210666-128.896A437.717333 437.717333 0 0 0 951.979093 512c0-59.392-11.562667-116.992-34.56-171.306667a440.448 440.448 0 0 0-94.293333-139.904A437.717333 437.717333 0 0 0 512.000427 71.978667 35.968 35.968 0 1 1 512.000427 0c69.12 0 136.192 13.482667 199.296 40.192a510.293333 510.293333 0 0 1 162.688 109.824 511.104 511.104 0 0 1 109.696 162.688c26.709333 63.104 40.234667 130.176 40.234666 199.296s-13.525333 136.192-40.234666 199.296a508.373333 508.373333 0 0 1-109.653334 162.688A511.104 511.104 0 0 1 512.000427 1024z" p-id="22729"></path></svg>
          <p className="tc">加载中...</p>
        </>
      ) : null}
      {listStatus === 'ok' ? (
        <>
          <div className="panel-body">
            <div className="config-staic-form" style={{ gridRowGap: 10 }}>
              <p className="form-label">云端价格数据</p>
              <ul className={`price-data-list`}>
                {priceDataList.length ? null : <div style={{ padding: 10, color: '#666' }} className="tc">暂无数据</div>}
                {priceDataList.map((_data, index) => (
                  <li className="list-item" key={index}>
                    <p>{`${serverList[_data.server].group} ${serverList[_data.server].name}(${serverList[_data.server].type})`}</p>
                    <p>{['联盟', '部落'][_data.side]}</p>
                    <p>{`${professionsTypeArr[_data.profession]}`}{_data.length ? <span className="tag-count"> {_data.length}项</span> : null}</p>
                    <p>{getTimeDesc(_data.time)}</p>
                    {isMy(_data.userId) ? <div className="tag-self-import">自导入</div> : null}
                    <svg fill={_data.isChecked ? '#0c8cfa' : '#ccc'} onClick={() => {
                      setPriceDataList(_prevList => {
                        const _arr = [..._prevList];
                        _arr.splice(index, 1, {
                          ..._prevList[index],
                          isChecked: !_prevList[index].isChecked,
                        });
                        return _arr;
                      })
                    }} className="price-check-box pointer" viewBox="0 0 1024 1024" width="18" height="18"><path d="M896 0H128C57.6 0 0 57.6 0 128v768c0 70.4 57.6 128 128 128h768c70.4 0 128-57.6 128-128V128c0-70.4-57.6-128-128-128zM448 794.496l-237.248-237.248 90.496-90.496L448 613.504l306.752-306.752 90.496 90.496L448 794.496z" p-id="12426"></path></svg>
                    {/* 状态图标 */}
                    {_data.status === 'loading' ? <svg className="tag-loading" viewBox="0 0 1024 1024" width="24" height="24" fill={'#0c8cfa'}><path d="M511.882596 287.998081h-0.361244a31.998984 31.998984 0 0 1-31.659415-31.977309v-0.361244c0-0.104761 0.115598-11.722364 0.115598-63.658399V96.000564a31.998984 31.998984 0 1 1 64.001581 0V192.001129c0 52.586273-0.111986 63.88237-0.119211 64.337537a32.002596 32.002596 0 0 1-31.977309 31.659415zM511.998194 959.99842a31.998984 31.998984 0 0 1-31.998984-31.998984v-96.379871c0-51.610915-0.111986-63.174332-0.115598-63.286318s0-0.242033 0-0.361243a31.998984 31.998984 0 0 1 63.997968-0.314283c0 0.455167 0.11921 11.711527 0.11921 64.034093v96.307622a31.998984 31.998984 0 0 1-32.002596 31.998984zM330.899406 363.021212a31.897836 31.897836 0 0 1-22.866739-9.612699c-0.075861-0.075861-8.207461-8.370021-44.931515-45.094076L195.198137 240.429485a31.998984 31.998984 0 0 1 45.256635-45.253022L308.336112 263.057803c37.182834 37.182834 45.090463 45.253022 45.41197 45.578141A31.998984 31.998984 0 0 1 330.899406 363.021212zM806.137421 838.11473a31.901448 31.901448 0 0 1-22.628318-9.374279L715.624151 760.859111c-36.724054-36.724054-45.018214-44.859267-45.097687-44.93874a31.998984 31.998984 0 0 1 44.77618-45.729864c0.32512 0.317895 8.395308 8.229136 45.578142 45.411969l67.88134 67.88134a31.998984 31.998984 0 0 1-22.624705 54.630914zM224.000113 838.11473a31.901448 31.901448 0 0 0 22.628317-9.374279l67.88134-67.88134c36.724054-36.724054 45.021826-44.859267 45.097688-44.93874a31.998984 31.998984 0 0 0-44.776181-45.729864c-0.32512 0.317895-8.395308 8.229136-45.578142 45.411969l-67.88134 67.884953a31.998984 31.998984 0 0 0 22.628318 54.627301zM255.948523 544.058589h-0.361244c-0.104761 0-11.722364-0.115598-63.658399-0.115598H95.942765a31.998984 31.998984 0 1 1 0-64.00158h95.996952c52.586273 0 63.88237 0.111986 64.337538 0.11921a31.998984 31.998984 0 0 1 31.659414 31.97731v0.361244a32.002596 32.002596 0 0 1-31.988146 31.659414zM767.939492 544.058589a32.002596 32.002596 0 0 1-31.995372-31.666639v-0.361244a31.998984 31.998984 0 0 1 31.659415-31.970085c0.455167 0 11.754876-0.11921 64.34115-0.11921h96.000564a31.998984 31.998984 0 0 1 0 64.00158H831.944685c-51.936034 0-63.553638 0.111986-63.665624 0.115598h-0.335957zM692.999446 363.0176a31.998984 31.998984 0 0 1-22.863126-54.381656c0.317895-0.32512 8.229136-8.395308 45.41197-45.578141l67.88134-67.884953A31.998984 31.998984 0 1 1 828.693489 240.429485l-67.892177 67.88134c-31.020013 31.023625-41.644196 41.759794-44.241539 44.393262l-0.697201 0.722488a31.908673 31.908673 0 0 1-22.863126 9.591025z" p-id="1876"></path></svg> : null}
                    {_data.status === 'ok' ? <svg className="tag-ok" viewBox="0 0 1024 1024" width="24" height="24" fill={'#0c8cfa'}><path d="M537 137c165.23 0 302.183 121.067 326.991 279.332C922.626 464.753 960 538.012 960 620c0 145.803-118.197 264-264 264H348c-156.942-0.542-284-127.933-284-285 0-115.73 68.98-215.348 168.067-259.984C282.35 220.296 399.947 137 537 137z m140 357c-10.925-14.296-30.975-17.202-45-7L467.768 609.478c-7.06 5.266-17.05 3.834-22.348-3.203L388 530h-1c-10.533-14.146-30.342-16.765-44-6-14.395 10.384-17.182 30.394-7 44l67.65 89.35c21.226 28.033 61.092 33.693 89.281 12.675L670 538h1c13.357-10.458 16.108-30.192 6-44z" p-id="2566"></path></svg> : null}
                    {_data.status === 'error' ? <svg className="tag-error" width="24" height="21" viewBox="0 0 175 146" fill={'#ff4500'}><path fillRule="evenodd" opacity="1" d="M32.83 39.46C13.47 48.17 0 67.63 0 90.23C0 120.91 24.82 145.79 55.47 145.9L123.44 145.9C151.91 145.9 175 122.81 175 94.34C175 78.32 167.7 64.01 156.25 54.56C151.4 23.65 124.65 0 92.38 0C65.61 0 42.65 16.27 32.83 39.46Z M88 90.11L108.61 110.71C109.56 111.65 110.86 112.24 112.29 112.24C115.17 112.24 117.5 109.91 117.5 107.04C117.5 105.6 116.92 104.29 115.97 103.35L95.36 82.74L115.97 62.13C116.92 61.18 117.5 59.88 117.5 58.45C117.5 55.58 115.17 53.24 112.29 53.24C110.86 53.24 109.56 53.82 108.61 54.77L88 75.38L67.39 54.77C66.45 53.82 65.14 53.24 63.71 53.24C60.83 53.24 58.5 55.58 58.5 58.45C58.5 59.88 59.09 61.18 60.03 62.13L80.64 82.74L60.03 103.35C59.09 104.29 58.5 105.6 58.5 107.04C58.5 109.91 60.83 112.24 63.71 112.24C65.14 112.24 66.45 111.65 67.39 110.71L88 90.11Z "/></svg> : null}
                  </li>
                ))}
              </ul>
              <div className={`list-item-price flex items-center ${priceDataList.length ? '' : ' active'}`} >
                <p className="label-import">{priceDataList.length ? (new Date().getTime() - priceDataList[0].time > 172800000 ? `当前最新数据为\"${getTimeDesc(priceDataList[0].time)}\"数据` : '') : '暂无云端数据'}</p>
                <div className="btn-import" onClick={() => setPriceManual(true)}>自行导入数据</div>
              </div>
              <p className="form-label"></p>
              <div className="form-input text-error">* 最终所采用的价格数据，将由所勾选的价格数据综合计算得到</div>
            </div>
          </div>
          <div className="panel-footer justify-between" style={{ padding: '10px 40px 30px' }}>
            <div className="btn" onClick={() => updateUserConfig('step', 1)}>上一步</div>
            <div className={priceDataList.filter(_data => _data.isChecked).length ? 'btn btn-primary' : 'btn btn-disabled'} onClick={handleGenUpgradePath}>计算冲级路线</div>
          </div>
        </>
      ) : null}
      {listStatus === 'error' ? (
        <div className="list-error">
          <svg className="icon-error" viewBox="0 0 1024 1024" width="70" height="70"><path d="M512 512m-448 0a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151" p-id="26075"></path><path d="M557.3 512l113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFFFFF" p-id="26076"></path></svg>
          <p className="tc">
            数据加载失败...
            <span className="text-primary pointer" onClick={loadPriceDataList}>重试</span>
          </p>
        </div>
      ) : null}
    </div>
  );
};

export default PriceDataPanel; 